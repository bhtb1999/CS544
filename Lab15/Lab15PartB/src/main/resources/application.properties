spring.application.name=simplePrompt

#spring.ai.openai.api-key=${OPENAI_API_KEY}
#spring.ai.openai.chat.options.model=gpt-4o

#spring.ai.openai.api-key=${GEMINI_API-KEY}
spring.ai.openai.api-key=AIzaSyBMp4mvq2w9MS203rtDtbpuBMe_RZdmYP0
spring.ai.openai.base-url=https://generativelanguage.googleapis.com/v1beta/openai
spring.ai.openai.chat.options.model=gemini-2.0-flash-exp
spring.ai.openai.chat.completions-path=/chat/completions
spring.ai.openai.chat.options.temperature=0.7
spring.ai.openai.embedding.options.model=gemini-embedding-001

#spring.ai.openai.chat.base-url=http://localhost:11434
#spring.ai.openai.chat.options.model=llama3.2:3b
#spring.ai.openai.api-key=none


spring.datasource.url=jdbc:mysql://localhost:3306/eadb
spring.datasource.username=user
spring.datasource.password=pass
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true


spring.ai.mcp.server.stdio=false
spring.ai.mcp.server.name=course-server
spring.ai.mcp.server.version=1.0.0
spring.ai.mcp.server.enabled=true
spring.ai.mcp.server.type=SYNC
spring.ai.mcp.server.capabilities.tool=true
spring.ai.mcp.server.sse-endpoint=/sse
spring.ai.mcp.server.sse-message-endpoint=/mcp/message

server.port=8080

# Redis Configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.database=0

# Spring AI Vector Store Configuration
spring.ai.vectorstore.redis.index-name=house-index
spring.ai.vectorstore.redis.dimensions=1536


